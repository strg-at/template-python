[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "python-app-template"
version = "1.0.0"
description = "A Python app that reticulates splines."
readme = "README.md"
authors = [
  { name = "John Smith", email = "john@strg.at" },
]
requires-python = ">=3.12,<4.0"
dependencies = [
  "fastapi[all]>=0.115.6",
  "gunicorn>=23.0.0",
  "poethepoet>=0.32.1",
  "typer>=0.15.1",
  "prometheus_client>=0.11.0",
  "prometheus-fastapi-instrumentator (>=7.1.0,<8.0.0)",
  "loguru (>=0.7.3,<0.8.0)",
]

[project.scripts]  # https://docs.astral.sh/uv/concepts/projects/config/#command-line-interfaces
python-app-template = "python_app_template.cli:app"

[project.urls]  # https://packaging.python.org/en/latest/specifications/well-known-project-urls/#well-known-labels
homepage = "https://github.com/strg-at/template-python"
source = "https://github.com/strg-at/template-python"
changelog = "https://github.com/strg-at/template-python/blob/main/CHANGELOG.md"
releasenotes = "https://github.com/strg-at/template-python/releases"
documentation = "https://github.com/strg-at/template-python"
issues = "https://github.com/strg-at/template-python/issues"

[project.optional-dependencies]
# Optional dependencies can be listed here.

[dependency-groups]
dev = [
    "basedpyright>=1.28.4",
    "debugpy>=1.8.14",
    "ipython>=9.0.2",
    "ruff>=0.11.2",
    "coverage>=7.6.10",
    "ipykernel>=6.29.4",
    "ipywidgets>=8.1.2",
    "pdoc>=15.0.1",
    "pre-commit>=4.0.1",
    "pytest>=8.3.4",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.1",
    "typeguard>=4.4.1",
]

[tool.coverage.report]  # https://coverage.readthedocs.io/en/latest/config.html#report
fail_under = 50
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["python_app_template"]

[tool.coverage.xml]  # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.basedpyright]
venvPath = "."
reportAny = false
reportUnusedCallResult = false
reportUnknownLambdaType = false

[tool.pytest.ini_options]  # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = ["error", "ignore::DeprecationWarning"]
testpaths = ["python_app_template", "tests"]
xfail_strict = true

[tool.ruff]  # https://docs.astral.sh/ruff/settings/
line-length = 120
src = ["python_app_template", "tests"]
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poe.executor]  # https://github.com/nat-n/poethepoet
type = "simple"

[tool.poe.tasks]

  [tool.poe.tasks.serve]
  help = "Serve the REST API"
  shell = """
    if [ $dev ]
    then {
      uvicorn \
        --host $host \
        --port $port \
        --reload \
        python_app_template.api:app
    } else {
      gunicorn \
        --access-logfile - \
        --bind $host:$port \
        --graceful-timeout 10 \
        --keep-alive 10 \
        --log-file - \
        --timeout 30 \
        --worker-class uvicorn.workers.UvicornWorker \
        --worker-tmp-dir /dev/shm \
        --workers 2 \
        python_app_template.api:app
    } fi
    """

[[tool.poe.tasks.serve.args]]
help = "Bind socket to this host (default: 0.0.0.0)"
name = "host"
options = ["--host"]
default = "0.0.0.0"

[[tool.poe.tasks.serve.args]]
help = "Bind socket to this port (default: 8000)"
name = "port"
options = ["--port"]
default = "8000"

[[tool.poe.tasks.serve.args]]
help = "Enable development mode"
type = "boolean"
name = "dev"
options = ["--dev"]

[tool.poe.tasks.docs]
help = "Generate this app's docs"
cmd = """
  pdoc \
    --docformat $docformat \
    --output-directory $outputdirectory \
    python_app_template
  """

[[tool.poe.tasks.docs.args]]
help = "The docstring style (default: numpy)"
name = "docformat"
options = ["--docformat"]
default = "numpy"

[[tool.poe.tasks.docs.args]]
help = "The output directory (default: docs)"
name = "outputdirectory"
options = ["--output-directory"]
default = "docs"

[tool.poe.tasks.lint]
help = "Lint this app"
cmd = """
  pre-commit run \
    --all-files \
    --color always
  """

[tool.poe.tasks.test]
help = "Test this app"

  [[tool.poe.tasks.test.sequence]]
  cmd = "coverage run"

  [[tool.poe.tasks.test.sequence]]
  cmd = "coverage report"

  [[tool.poe.tasks.test.sequence]]
  cmd = "coverage xml"
